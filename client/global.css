@tailwind base;
@tailwind components;
@tailwind utilities;

@layer base {
  /**
   * Tailwind CSS theme
   * tailwind.config.ts expects the following color variables to be expressed as HSL values.
   * A different format will require also updating the theme in tailwind.config.ts.
  */
  :root {
    /* Scalinova Brand Colors */
    --background: 48 44% 93%; /* Light cream #F5F1E6 */
    --foreground: 162 100% 11%; /* Dark teal #004238 */

    --card: 0 0% 100%;
    --card-foreground: 162 100% 11%;

    --popover: 0 0% 100%;
    --popover-foreground: 162 100% 11%;

    --primary: 162 100% 20%; /* Dark blue-green #00667D */
    --primary-foreground: 48 44% 93%;

    --secondary: 45 67% 56%; /* Gold #D1A940 */
    --secondary-foreground: 162 100% 11%;

    --muted: 48 35% 88%;
    --muted-foreground: 162 50% 30%;

    --accent: 79 60% 35%; /* SCALI green #4F7B3E */
    --accent-foreground: 48 44% 93%;

    --destructive: 0 84% 60%;
    --destructive-foreground: 210 20% 98%;

    --border: 48 25% 82%;
    --input: 48 25% 82%;
    --ring: 162 100% 20%;

    --radius: 0.75rem;

    /* Custom Scalinova Colors */
    --scalinova-gold: 45 67% 56%; /* Crown gold #D1A940 */
    --scalinova-teal: 162 100% 11%; /* Shield dark teal #004238 */
    --scalinova-blue: 190 100% 20%; /* Circle blue-green #00667D */
    --scalinova-green-scali: 79 60% 35%; /* SCALI green #4F7B3E */
    --scalinova-green-nova: 79 58% 40%; /* NOVA green #6F9333 */
    --scalinova-lime: 79 58% 50%; /* NOVA lime #A3B631 */
    --scalinova-yellow: 50 89% 67%; /* NOVA yellow #F0C529 */
    --scalinova-cream: 48 44% 93%; /* Background cream #F5F1E6 */

    --sidebar-background: 48 44% 95%;
    --sidebar-foreground: 162 100% 11%;
    --sidebar-primary: 162 100% 20%;
    --sidebar-primary-foreground: 48 44% 93%;
    --sidebar-accent: 48 35% 90%;
    --sidebar-accent-foreground: 162 100% 11%;
    --sidebar-border: 48 25% 85%;
    --sidebar-ring: 162 100% 20%;
  }

  .dark {
    /* Dark mode with Scalinova brand colors */
    --background: 162 100% 8%; /* Dark teal background */
    --foreground: 48 44% 93%; /* Light cream text */

    --card: 162 100% 11%;
    --card-foreground: 48 44% 93%;

    --popover: 162 100% 11%;
    --popover-foreground: 48 44% 93%;

    --primary: 45 67% 56%; /* Gold primary */
    --primary-foreground: 162 100% 11%;

    --secondary: 162 100% 15%;
    --secondary-foreground: 48 44% 93%;

    --muted: 162 50% 15%;
    --muted-foreground: 48 25% 70%;

    --accent: 79 60% 45%;
    --accent-foreground: 48 44% 93%;

    --destructive: 0 62% 30%;
    --destructive-foreground: 48 44% 93%;

    --border: 162 50% 20%;
    --input: 162 50% 20%;
    --ring: 45 67% 56%;

    --sidebar-background: 162 100% 10%;
    --sidebar-foreground: 48 44% 93%;
    --sidebar-primary: 45 67% 56%;
    --sidebar-primary-foreground: 162 100% 11%;
    --sidebar-accent: 162 50% 15%;
    --sidebar-accent-foreground: 48 44% 93%;
    --sidebar-border: 162 50% 20%;
    --sidebar-ring: 45 67% 56%;
  }
}

@layer base {
  * {
    @apply border-border;
  }

  body {
    @apply bg-background text-foreground;
  }

  /* Ensure text descenders are not clipped */
  h1,
  h2,
  h3,
  h4,
  h5,
  h6 {
    overflow: visible;
  }
}

@layer utilities {
  .bg-grid-pattern {
    background-image: radial-gradient(
      circle,
      hsl(var(--muted-foreground) / 0.15) 1px,
      transparent 1px
    );
    background-size: 20px 20px;
  }

  .perspective-1000 {
    perspective: 1000px;
  }

  .transform-style-3d {
    transform-style: preserve-3d;
  }

  .backface-hidden {
    backface-visibility: hidden;
  }

  .bg-animated-gradient {
    background: linear-gradient(
      -45deg,
      hsl(var(--scalinova-teal)),
      hsl(var(--scalinova-blue)),
      hsl(var(--scalinova-green-nova)),
      hsl(var(--scalinova-gold))
    );
    background-size: 400% 400%;
    animation: gradientShift 8s ease infinite;
  }

  .text-animated-gradient {
    background: linear-gradient(
      -45deg,
      hsl(var(--scalinova-teal)),
      hsl(var(--scalinova-blue)),
      hsl(var(--scalinova-green-nova)),
      hsl(var(--scalinova-gold))
    );
    background-size: 400% 400%;
    animation: gradientShift 6s ease infinite;
    -webkit-background-clip: text;
    background-clip: text;
    -webkit-text-fill-color: transparent;
    /* Ensure descenders are not clipped */
    line-height: 1.2;
    padding-bottom: 0.1em;
    display: inline-block;
  }
}

@layer components {
  .animate-fade-in {
    animation: fadeIn 0.6s ease-in-out;
  }

  .animate-slide-up {
    animation: slideUp 0.6s ease-out;
  }

  .animate-float {
    animation: float 3s ease-in-out infinite;
  }

  .animate-bounce-slow {
    animation: bounceSlow 4s ease-in-out infinite;
  }

  .animate-pulse-glow {
    animation: pulseGlow 2s ease-in-out infinite;
  }

  .animate-rotate-3d {
    animation: rotate3d 10s linear infinite;
  }

  .animate-slide-in-left {
    animation: slideInLeft 0.8s ease-out;
  }

  .animate-slide-in-right {
    animation: slideInRight 0.8s ease-out;
  }

  .animate-scale-in {
    animation: scaleIn 0.5s ease-out;
  }

  .animate-flip {
    animation: flip 0.6s ease-in-out;
  }

  .animate-wiggle {
    animation: wiggle 1s ease-in-out infinite;
  }

  .hover-lift {
    transition: all 0.3s cubic-bezier(0.4, 0, 0.2, 1);
  }

  .hover-lift:hover {
    transform: translateY(-8px) scale(1.02);
    box-shadow: 0 20px 40px rgba(0, 0, 0, 0.1);
  }

  .hover-tilt {
    transition: all 0.3s cubic-bezier(0.4, 0, 0.2, 1);
  }

  .hover-tilt:hover {
    transform: perspective(1000px) rotateX(10deg) rotateY(-10deg) rotateZ(2deg);
  }

  .hover-glow {
    transition: all 0.3s ease;
    position: relative;
  }

  .hover-glow:hover {
    box-shadow:
      0 0 20px hsl(var(--scalinova-gold) / 0.5),
      0 0 40px hsl(var(--scalinova-blue) / 0.3),
      0 0 60px hsl(var(--scalinova-teal) / 0.2);
  }

  .hover-slide-bg {
    position: relative;
    overflow: hidden;
  }

  .hover-slide-bg::before {
    content: "";
    position: absolute;
    top: 0;
    left: -100%;
    width: 100%;
    height: 100%;
    background: linear-gradient(
      90deg,
      transparent,
      rgba(255, 255, 255, 0.2),
      transparent
    );
    transition: left 0.5s ease;
  }

  .hover-slide-bg:hover::before {
    left: 100%;
  }

  .card-3d {
    transform-style: preserve-3d;
    transition: transform 0.3s ease;
  }

  .card-3d:hover {
    transform: rotateY(10deg) rotateX(10deg);
  }

  .text-reveal {
    position: relative;
    overflow: hidden;
  }

  .text-reveal::after {
    content: "";
    position: absolute;
    top: 0;
    left: 0;
    right: 0;
    bottom: 0;
    background: hsl(var(--scalinova-teal));
    transform: translateX(-100%);
    transition: transform 0.8s cubic-bezier(0.68, -0.55, 0.265, 1.55);
  }

  .text-reveal:hover::after {
    transform: translateX(100%);
  }

  .morphing-border {
    position: relative;
    border-radius: 1rem;
    background: linear-gradient(
      45deg,
      hsl(var(--scalinova-gold)),
      hsl(var(--scalinova-blue)),
      hsl(var(--scalinova-teal))
    );
    background-size: 300% 300%;
    animation: borderMorph 4s ease infinite;
    padding: 2px;
  }

  .morphing-border > * {
    background: hsl(var(--background));
    border-radius: calc(1rem - 2px);
    padding: inherit;
  }

  .parallax-element {
    transform: translateZ(0);
    will-change: transform;
  }

  .gradient-text-safe {
    background: linear-gradient(
      -45deg,
      hsl(var(--scalinova-teal)),
      hsl(var(--scalinova-blue)),
      hsl(var(--scalinova-green-nova)),
      hsl(var(--scalinova-gold))
    );
    -webkit-background-clip: text;
    background-clip: text;
    -webkit-text-fill-color: transparent;
    /* Prevent descender clipping */
    line-height: 1.3;
    padding-bottom: 0.15em;
    display: inline-block;
    overflow: visible;
  }
}
